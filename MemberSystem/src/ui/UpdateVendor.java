/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import io.DatabaseMethods;
import javax.swing.JFrame;
import utilityclasses.DayPassVendor;
import utilityclasses.PermanentVendor;
import utilityclasses.Vendor;

/**
 * Update Vendor window for the Vendor database application
 * Allows for updating a vendor in the database. Populates the form fields with
 * vendor data from the vendor selected in ViewVendors.
 * Includes data validation of form fields. Uses the VendorFields panel class 
 * for form fields.
 * @author Link Jones
 * @version 1.0
 * @since 2021-11-24
 */
public class UpdateVendor extends javax.swing.JFrame
{
    private Vendor vendor;
    private VendorTableModel vendorTableModel;
    private ViewVendors parent;
    /**
     * Creates new form UpdateMember.
     * @param parent the parent window (ViewVendors)
     * @param vendor a vendor object representing a vendor currently in the database
     * @param vendorTableModel a table model containing a list of vendors in the database
     */
    public UpdateVendor(ViewVendors parent, Vendor vendor, VendorTableModel vendorTableModel)
    {
        initComponents();
        this.setBounds(100, 100, 550, 700);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.parent = parent;
        this.vendor = vendor;
        this.vendorTableModel = vendorTableModel;
        populateDataFields();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pnlButtons = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        dataFields = new ui.VendorFields();
        lblFeedback = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCloseActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnResetActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        lblTitle.setFont(new java.awt.Font("Verdana", 1, 22)); // NOI18N
        lblTitle.setText("Update Vendor");

        lblFeedback.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(dataFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(lblTitle)
                .addGap(6, 6, 6)
                .addComponent(dataFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblFeedback))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Update vendor
     * @param evt 
     */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnUpdateActionPerformed
    {//GEN-HEADEREND:event_btnUpdateActionPerformed
        
        if (dataFields.validateTextInputs()) //validate data before updating (client-side)
        {
            //create a new vendor object from the text fields (with the same ID as this.vendor)
            Vendor newVendor = fetchDataFromTextFields();
            //attempt to update vendor in database
            if (DatabaseMethods.UpdateVendor(newVendor))
            { //success
                this.lblFeedback.setText("Vendor updated");
                this.vendor = newVendor;
                this.parent.refresh(); //refresh the parent's table model to update the table data
            }
            else
            { //failed 
                this.lblFeedback.setText("Error updating vendor");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    /**
     * Close this window and show the parent window
     * @param evt 
     */
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCloseActionPerformed
    {//GEN-HEADEREND:event_btnCloseActionPerformed
        this.parent.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed
    /**
     * Reset the vendor form text fields back to the selected Vendor's information
     * @param evt 
     */
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnResetActionPerformed
    {//GEN-HEADEREND:event_btnResetActionPerformed
        populateDataFields();
    }//GEN-LAST:event_btnResetActionPerformed
    /**
     * Set the vendor form text fields to the selected Vendor's information
     */
    private void populateDataFields()
    {
        dataFields.getTxtShopName().setText(vendor.getShopName());
        dataFields.getTxtFirstName().setText(vendor.getFirstName());
        dataFields.getTxtLastName().setText(vendor.getLastName());
        dataFields.getTxtEmail().setText(vendor.getEmail());
        dataFields.getTxtMobile().setText(vendor.getMobile());
        dataFields.setSelectedSection(vendor.getSectionID());
        dataFields.getChkFeePaid().setSelected(vendor.isFeePaid());
        //check for Vendor type - day pass or permanent
        //object has been cast to Vendor type in the constructor and will need 
        //to be cast back to child type
        if (vendor instanceof DayPassVendor)
        {
            dataFields.selectDayPassMember();
            DayPassVendor dayVendor = (DayPassVendor) vendor;
            dataFields.getTxtPassDate().setText(dayVendor.getPassDate());
            dataFields.getChkFirstTime().setSelected(dayVendor.isFirstTime());
        }
        else if (vendor instanceof PermanentVendor)
        {
            dataFields.selectPermanentMember();
            dataFields.getTxtDateJoined().setText(((PermanentVendor)vendor).getJoinedDate());
        }            
    }
    /**
     * Create a new vendor object with the current vendor's ID and data from the 
     * form fields
     * @return a new Vendor object
     */
    private Vendor fetchDataFromTextFields()
    {
        //get data common to all vendor types
        String firstName = dataFields.getTxtFirstName().getText();
        String lastName = dataFields.getTxtLastName().getText();
        String shopName = dataFields.getTxtShopName().getText();
        String email = dataFields.getTxtEmail().getText();
        String mobile = dataFields.getTxtMobile().getText();
        int sectionID = dataFields.getSelectedSection();
        boolean feePaid = dataFields.getChkFeePaid().isSelected();
        //check which kind of vendor
        if (dataFields.getRadPermanent().isSelected()) //permanent
        {
            String joinedDate = dataFields.getTxtDateJoined().getText();
            PermanentVendor newVendor = new PermanentVendor(vendor.getId(), shopName, firstName, lastName, email, mobile, sectionID, feePaid, joinedDate);
            return newVendor;
        }
        else //day pass
        {
            String passDate = dataFields.getTxtPassDate().getText();
            boolean firstTime = dataFields.getChkFirstTime().isSelected();
            DayPassVendor newVendor = new DayPassVendor(vendor.getId(), shopName, firstName, lastName, email, mobile, sectionID, feePaid, passDate, firstTime);
            return newVendor;
        }
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private ui.VendorFields dataFields;
    private javax.swing.JLabel lblFeedback;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlButtons;
    // End of variables declaration//GEN-END:variables
}
